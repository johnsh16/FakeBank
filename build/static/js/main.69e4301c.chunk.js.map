{"version":3,"sources":["logo.svg","pages/DataDisplay.js","pages/CreateAccount.js","images/bank.png","pages/Login.js","pages/Home.js","pages/Deposit.js","pages/Withdraw.js","App.js","reportWebVitals.js","index.js"],"names":["DataDisplay","Context","JSON","parse","localStorage","getItem","CreateCards","props","toReturn","i","length","toAdd","Card","className","Title","id","Subtitle","firstname","lastname","ListGroup","Item","email","password","accountbalance","push","ArrangeCards","Container","Row","Col","CreateAccount","userList","React","useState","validated","setValidated","submit","setSubmit","emailCheck","setEmailCheck","validatePassword","setValidatePassword","validateFirst","setValidateFirst","validateLast","setValidateLast","submitTemplate","handleSubmit","event","preventDefault","form","currentTarget","passwordCheckFunction","emailCheckFunction","checkFirst","checkLast","document","getElementById","value","setItem","stringify","clearForm","hidden","checkValidity","stopPropagation","setTimeout","includes","console","log","Fragment","Alert","variant","bg","visible","Header","Form","onChange","onSubmit","Group","controlId","Label","Control","required","type","placeholder","Feedback","InputGroup","hasValidation","Button","onClick","Footer","Login","setValidatePass","setValidateEmail","index","validateCredentials","pass","href","Text","Home","Img","src","bankimg","Deposit","useParams","dataIn","testing","validate","setValidate","notANumber","setNotANumber","negNumber","setNegNumber","AccountCard","Body","testValue","Number","FormControl","disabled","Withdraw","context","userInfo","data","currentBalance","accounts","App","getUser","getCurrent","NavBar","setValue","Box","BottomNavigation","showLabels","newValue","BottomNavigationAction","label","undefined","newUserList","checkChanges","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69e4301c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport {Card, ListGroup, Container, Row, Col} from \"react-bootstrap\";\nimport accounts from \"../json/accounts.json\"\nimport \"./DataDisplay.css\"\n\n\nfunction DataDisplay () {\n\n    var Context = JSON.parse(localStorage.getItem(\"userData\"));\n    let cardArr = [];\n\n\n    \n\n    function cardTemplate (props) {\n        return (\n            <div  key={props.id}>\n                <Card className=\"card\">\n                    <Card.Title className=\"card-title\">Account #{props.id}</Card.Title>\n                    <Card.Subtitle>{props.firstname} {props.lastname}</Card.Subtitle>\n                    <ListGroup>\n                        <ListGroup.Item>Email: {props.email}</ListGroup.Item>\n                        <ListGroup.Item>Password: {props.password}</ListGroup.Item>\n                        <ListGroup.Item>Balance: ${props.accountbalance}</ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </div>\n        )\n    }\n\n    function CreateCards () {\n        let toReturn = [];\n        for (let i = 0; i<Context.length; i++) { \n            let toAdd = cardTemplate(Context[i]);\n            toReturn.push(toAdd);\n        }\n        return toReturn;\n    }\n\n    function ArrangeCards () {\n        return (\n            <Container>\n                <Row>\n                    <Col><CreateCards></CreateCards></Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    return (\n        <Card id=\"card-space\">\n            <ArrangeCards></ArrangeCards>\n        </Card>  \n    )\n}\n\nexport default DataDisplay","import React from \"react\";\nimport {Form, Button, Card, Col, InputGroup, Box, Alert} from \"react-bootstrap\";\nimport * as fs from 'fs';\nimport * as yup from 'yup';\nimport {useFormik} from \"formik\";\nimport accounts from \"../json/accounts.json\"\nimport \"./CreateAccount.css\"\n\nfunction CreateAccount () {\n\n    // /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\n\n    let userList = JSON.parse(localStorage.getItem(\"userData\"));\n\n    const [validated, setValidated] = React.useState(false);\n    const [submit, setSubmit] = React.useState(false);\n    const [emailCheck, setEmailCheck] = React.useState(false);\n    const [validatePassword, setValidatePassword] = React.useState(false);\n    const [validateFirst, setValidateFirst] = React.useState(false);\n    const [validateLast, setValidateLast] = React.useState(false);\n\n    var submitTemplate = {\n        \"id\" : \"\",\n        \"firstname\" : \"\",\n        \"lastname\" : \"\",\n        \"email\" : \"\",\n        \"password\" : \"\",\n        \"accountbalance\" : 0\n    }\n\n    function createNewUser () {\n        submitTemplate[\"id\"] = userList.length+1;\n        submitTemplate[\"firstname\"] = document.getElementById(\"validationCustomFirstname\").value;\n        submitTemplate[\"lastname\"] = document.getElementById(\"validationCustomLastname\").value;\n        submitTemplate[\"email\"] = document.getElementById(\"validationCustomEmail\").value;\n        submitTemplate[\"password\"] = document.getElementById(\"validationCustomPassword\").value;\n        userList.push(submitTemplate);\n        localStorage.setItem(\"userData\", JSON.stringify(userList));\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const form = event.currentTarget;\n\n        setSubmit(true);\n\n        if (passwordCheckFunction() && emailCheckFunction() && checkFirst() && checkLast()) {\n            createNewUser();\n            clearForm();\n            setValidated(true);\n            document.getElementById(\"form\").hidden = true;\n            document.getElementById(\"success-container\").hidden = false;\n            \n        } \n        \n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        setTimeout(() => {\n            setSubmit(false);\n            setValidated(false);\n        }, 3000)\n        \n        \n        \n    };\n\n    const passwordCheckFunction = (event) => {\n        if (document.getElementById(\"validationCustomPassword\").value.length < 8) {\n            setValidatePassword(false);\n            return false;\n        } else {\n            setValidatePassword(true);\n            return true;\n        }\n    }\n\n    function checkFirst () {\n        let toCheck = document.getElementById(\"validationCustomFirstname\").value;\n        if (toCheck != \"\") {\n            setValidateFirst(true);\n            return true;\n        } else {\n            setValidateFirst(false);\n            return false;\n        }\n    }\n\n    function checkLast () {\n        let toCheck = document.getElementById(\"validationCustomLastname\").value;\n        if (toCheck != \"\") {\n            setValidateLast(true);\n            return true;\n        } else {\n            setValidateLast(false);\n            return false;\n        }\n    }\n\n    const emailCheckFunction = (event) => {\n        if (document.getElementById(\"validationCustomEmail\").value.includes(\"@\")) {\n            setEmailCheck(true);\n            console.log(\"Seeing an @\")\n            return true;\n        } else {\n            setEmailCheck(false);\n            console.log(\"Not seeing an @\")\n            return false;\n        };\n    }  \n    \n    function checkValidation () {\n        emailCheckFunction()\n        passwordCheckFunction()\n        checkFirst()\n        checkLast()\n        if (emailCheck && validatePassword && validateFirst && validateLast) {\n            setValidated(true);\n        } else {\n            setValidated(false);\n        }\n    }\n\n    function reloadForm () {\n        document.getElementById(\"form\").hidden = false;\n        document.getElementById(\"success-container\").hidden = true;\n    }\n\n    function clearForm () {\n        document.getElementById(\"validationCustomFirstname\").value = \"\";\n        document.getElementById(\"validationCustomLastname\").value = \"\";\n        document.getElementById(\"validationCustomEmail\").value = \"\";\n        document.getElementById(\"validationCustomPassword\").value = \"\";\n    }\n\n    return (\n        <React.Fragment >\n        \n        {(validated && submit) ? <Alert variant=\"success\">Success! Your account was created.</Alert> : null}\n        {(submit && !validatePassword) ? <Alert variant=\"danger\">Password must be 8 characters.</Alert> : null}\n        {(submit && !emailCheck) ? <Alert variant=\"danger\">Please enter a valid email.</Alert> : null}\n        {(submit && !validateFirst) ? <Alert variant=\"danger\">Please enter a valid first name.</Alert> : null}\n        {(submit && !validateLast) ? <Alert variant=\"danger\">Please enter a valid last name.</Alert> : null}\n        <div id=\"form\" hidden={false}>\n            <Card className=\"form-card\" bg=\"light\" visible=\"true\">\n                <Card.Header></Card.Header>\n                <Card.Title className=\"card-title\">Create Account</Card.Title>\n                <Form id=\"createAccountForm\" onChange={checkValidation} onSubmit={handleSubmit} >\n                    <Form.Group  controlId=\"validationCustomFirstname\" validated={validated} >\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"firstname\"\n                            placeholder=\"Enter first name\"\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group  controlId=\"validationCustomLastname\" validated={validated} onSubmit={handleSubmit}>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"lastname\"\n                            placeholder=\"Enter last name\"\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group  controlId=\"validationCustomEmail\" validated={validated && emailCheckFunction} onChange={emailCheckFunction}>\n                    <Form.Label>Email</Form.Label>\n                        <InputGroup hasValidation>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Email\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                required\n                                validated={emailCheckFunction}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid email.\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group  controlId=\"validationCustomPassword\" validated={validated && passwordCheckFunction}>\n                    <Form.Label>Password</Form.Label>\n                        <InputGroup hasValidation onChange={passwordCheckFunction} >\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Password\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                required\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                            Password must be at least 8 characters. \n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n\n                    \n                    <Button variant=\"primary\" className=\"account-button\" type=\"submit\">\n                        Submit\n                    </Button>\n                    <Button variant=\"primary\" type=\"clear\" onClick={clearForm} className=\"account-button\" >\n                        Clear Form\n                    </Button>\n                </Form>\n                <Card.Footer></Card.Footer>\n            </Card>\n        </div>\n        <div id=\"success-container\" hidden={true}>\n            <Card>\n                <Card.Title>Create Another Account?</Card.Title>\n                <Button onClick={reloadForm}>Create Another Account</Button>\n            </Card>\n        </div>\n        </React.Fragment>\n        \n        )\n}\n\nexport default CreateAccount","export default __webpack_public_path__ + \"static/media/bank.4bff8ce0.png\";","import React from \"react\";\nimport {Form, Button, Card} from \"react-bootstrap\"\nimport \"./Login.css\"\n\n\nfunction Login () {\n\n    var userList = JSON.parse(localStorage.getItem(\"userData\"));\n    const [validatePass, setValidatePass] = React.useState(false);\n    const [validateEmail, setValidateEmail] = React.useState(false);\n    const [submit, setSubmit] = React.useState(false);\n    var index = null;\n\n    function validateCredentials(pass, email) {\n        for (let i = 0; i<userList.length; i++) {\n            if (userList[i][\"email\"] == email) {\n                setValidateEmail(true);\n                if (userList[i][\"password\"] == pass) {\n                    setValidatePass(true);\n                    index = i;\n                    return true;\n                }\n            }\n        }\n        setValidateEmail(false);\n        setValidatePass(false);\n    }\n\n    function handleSubmit () {\n        setSubmit(true);\n        if (validateCredentials(document.getElementById(\"password\").value, document.getElementById(\"email\").value)) {\n            localStorage.setItem(\"currentUser\", JSON.stringify(userList[index]));\n            document.getElementById(\"login-container\").hidden = true;\n            document.getElementById(\"login-success\").hidden = false;\n        } else {\n            console.log(\"not validated\")\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Card id=\"login-container\" hidden={false}>\n                <Card.Title>Login</Card.Title>\n                <Form id=\"login-form\" onChange={validateCredentials}>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\"></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter password\"></Form.Control>\n                    </Form.Group>\n                    <Button className=\"login-button\" onClick={handleSubmit}>Submit</Button>\n                    <Button className=\"login-button\" href=\"/home\">Cancel</Button>\n                </Form>\n                <Card.Text>\n                    Hint: use \"fake@test.com\" and \"password\"\n                </Card.Text>\n            </Card>\n            <Card id=\"login-success\" hidden={true}>\n                <Card.Title className=\"card-title\">\n                    Logged in!\n                </Card.Title>\n                <Button href=\"/home\">Return Home</Button>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default Login","import {Card, Button} from \"react-bootstrap\"\nimport bankimg from \"../images/bank.png\"\nimport \"./Home.css\"\nimport Login from \"./Login\"\n\nfunction Home () {\n\n\n    var Context = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n    function loadLogin () {\n        document.getElementById(\"home-card\").hidden = true;\n        document.getElementById(\"login-card\").hidden = false;\n    }\n\n    return (\n        <div>\n            <Card id=\"home-card\" hidden={false}>\n                <Card.Title className=\"card-title\">\n                    Welcome to FakeBank!\n                </Card.Title>\n                <Card.Subtitle>\n                    You are logged in as {Context.firstname} {Context.lastname}\n                </Card.Subtitle>\n                <Card.Img variant=\"top\" id=\"card-image\" src={bankimg} />\n                <Button onClick={loadLogin} id=\"sign-out\">Sign Out</Button>\n            </Card>\n            <div id=\"login-card\" hidden={true}>\n                <Login></Login>\n            </div>    \n        </div>\n    )\n}\n\nexport default Home","import React from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport {Card, InputGroup, FormControl, Button, Alert} from \"react-bootstrap\";\nimport data from \"../json/accounts.json\"\nimport \"./Deposit.css\"\nimport AccountInfo from \"../App.js\"\n\nfunction Deposit () {\n\n    const { dataIn } = useParams();\n\n    var testing = JSON.parse(localStorage.getItem(\"currentUser\"));\n    console.log(testing[\"id\"])\n    var Context = JSON.parse(localStorage.getItem(\"currentUser\"));\n    \n    const [validate, setValidate] = React.useState(false);\n    const [notANumber, setNotANumber] = React.useState(false)\n    const [negNumber, setNegNumber] = React.useState(false);\n    const [submit, setSubmit] = React.useState(false);\n\n    \n\n    function checkDeposit (event) {\n        setSubmit(false);\n        let testValue = document.getElementById(\"deposit-field\").value;\n        if (testValue < 0) {\n            setValidate(true);\n            setNotANumber(false);\n            setNegNumber(true);\n            return false;\n        } else if ((typeof Number(testValue)) != \"number\") {\n            setNegNumber(false);\n            setValidate(true);\n            setNotANumber(true);\n            return false;\n        }\n        else {\n            setValidate(true);\n            return true;\n        }\n    }\n\n    function logDeposit(user, amount) {\n        let currentTrans = JSON.parse(localStorage.getItem(\"transactions\"));\n        let toAdd = {\n            \"type\" : \"deposit\",\n            \"user\" : user[\"id\"],\n            \"amount\" : amount\n        }\n        currentTrans.push(toAdd);\n        localStorage.setItem(\"transactions\", JSON.stringify(currentTrans));\n    }\n\n    function AccountCard () {\n        return (\n            <React.Fragment>\n            <Card className=\"account-info\">\n                <Card.Title>Your Account</Card.Title>\n                    <Card.Text>Name: {Context[\"firstname\"]}</Card.Text>\n                    <Card.Text>Account #: {Context[\"id\"]}</Card.Text>\n                    <Card.Text>Balance: {Context[\"accountbalance\"]}</Card.Text>\n            </Card>\n            </React.Fragment>\n        )\n    }\n\n    function handleSubmit () {\n        if (validate) {\n            setSubmit(true);\n        }\n        if (validate && !negNumber && !notANumber) {\n            Context[\"accountbalance\"] += Number(document.getElementById(\"deposit-field\").value);\n            //logDeposit(Context, Number(document.getElementById(\"deposit-field\").value))\n            localStorage.setItem(\"currentUser\", JSON.stringify(Context));\n            document.getElementById(\"deposit-field\").value = \"\";\n        }\n        \n        setValidate(false);\n    }\n\n    return (\n        <React.Fragment>\n            {(!notANumber && !negNumber && submit) ? <Alert variant=\"success\">Success! Your transaction was processed.</Alert> : null}\n            {(notANumber && submit) ? <Alert variant=\"danger\">Please enter a number to make a transaction.</Alert>: null}\n            {(negNumber && submit) ? <Alert variant=\"danger\">Cannot make a negative deposit. Visit \"Withdraw\" page if you wish to make a withdrawal.</Alert>: null}\n\n            <Card className=\"module\">\n                <Card.Header></Card.Header>\n                <Card.Title className=\"card-title\">Make a Deposit</Card.Title>\n                <Card.Body>\n                <AccountCard></AccountCard>\n                <InputGroup className=\"mb-3\" onChange={checkDeposit} >\n                    <InputGroup.Text>$</InputGroup.Text>\n                        <FormControl aria-label=\"Amount (to the nearest dollar)\" type=\"number\" id=\"deposit-field\"/>\n                        <InputGroup.Text>.00</InputGroup.Text>\n                        <Button disabled={!validate} onClick={handleSubmit}>Make Deposit</Button>\n                    </InputGroup>\n                </Card.Body>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default Deposit","import React, { Fragment } from \"react\";\nimport {Card, InputGroup, FormControl, Button, Alert} from \"react-bootstrap\";\nimport data from \"../json/accounts.json\"\n\nfunction Withdraw () {\n\n    let context = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n    const userInfo = data;\n    const [validate, setValidate] = React.useState(false);\n    const [submit, setSubmit] = React.useState(false);\n\n    function checkWithdrawal (event) {\n        let currentBalance = userInfo.accounts[0][\"accountbalance\"];\n        console.log(currentBalance)\n        let testValue = document.getElementById(\"withdrawal-field\").value;\n        if (testValue <= 0 || testValue > currentBalance) {\n            setValidate(false);\n            return false;\n        }\n        else {\n            setValidate(true);\n            return true;\n        }\n        \n    }\n\n    function logWithdrawal(user, amount) {\n        let currentTrans = JSON.parse(localStorage.getItem(\"transactions\"));\n        let toAdd = {\n            \"type\" : \"withdrawal\",\n            \"user\" : user[\"id\"],\n            \"amount\" : amount\n        }\n        currentTrans.push(toAdd);\n        localStorage.setItem(\"transactions\", JSON.stringify(currentTrans));\n    }\n\n    function handleSubmit () {\n        if (validate) {\n            setSubmit(true);\n        }\n        context[\"accountbalance\"] -= Number(document.getElementById(\"withdrawal-field\").value);\n        //logWithdrawal(context, Number(document.getElementById(\"withdrawal-field\").value))\n        localStorage.setItem(\"currentUser\", JSON.stringify(context));\n        document.getElementById(\"withdrawal-field\").value = \"\";\n        setValidate(false);\n    }\n\n    return (\n        <React.Fragment>\n            {submit ? <Alert variant=\"success\">Success! Your transaction was processed.</Alert> : null}\n            <Card className=\"module\">\n                <Card.Header></Card.Header>\n                <Card.Title className=\"card-title\">Make a Withdrawal</Card.Title>\n                <Card.Body>\n                <Card className=\"account-info\">\n                    <Card.Title>Your Account</Card.Title>\n                    <Card.Text>Name: {context[\"firstname\"]}</Card.Text>\n                    <Card.Text>Account #: {context[\"id\"]}</Card.Text>\n                    <Card.Text>Balance: {context[\"accountbalance\"]}</Card.Text>\n                </Card>\n                <InputGroup className=\"mb-3\" onChange={checkWithdrawal} >\n                    <InputGroup.Text>$</InputGroup.Text>\n                        <FormControl aria-label=\"Amount (to the nearest dollar)\" type=\"number\" id=\"withdrawal-field\"/>\n                        <InputGroup.Text>.00</InputGroup.Text>\n                        <Button disabled={!validate} onClick={handleSubmit}>Make Withdrawal</Button>\n                    </InputGroup>\n                </Card.Body>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default Withdraw","import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport DataDisplay from \"./pages/DataDisplay\";\nimport CreateAccount from \"./pages/CreateAccount\"\nimport {Navbar, Container, Nav, Button } from \"react-bootstrap\"\nimport Home from \"./pages/Home\"\nimport Deposit from \"./pages/Deposit\"\nimport Withdraw from \"./pages/Withdraw\"\nimport Box from \"@mui/material/Box\"\nimport BottomNavigation from \"@mui/material/BottomNavigation\"\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\"\nimport data from \"./json/accounts.json\"\nimport { BrowserRouter, Route, Switch, Link} from 'react-router-dom'\nimport {LinkContainer} from \"react-router-bootstrap\"\nimport context from \"react-bootstrap/esm/AccordionContext\";\nimport { setNestedObjectValues } from \"formik\";\n\n\nfunction App({props}) {\n\n  let testData = JSON.stringify(data.accounts);\n  let testCurrent = JSON.stringify(data.accounts[0]);\n  var getUser = JSON.parse(localStorage.getItem(\"userData\"));\n  var getCurrent = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n\n  function checkLocalStorage() {\n    if (getUser == undefined) {\n      localStorage.setItem(\"userData\", JSON.stringify(data.accounts));\n    }\n    if (getCurrent == undefined) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(data.accounts[0]));\n    }\n  }\n  checkLocalStorage();\n\n  \n\n  function checkChanges() {\n    let index = getCurrent[\"id\"]-1;\n    if (getUser[index][\"accountbalance\"] != getCurrent[\"accountbalance\"]) {\n      let newUserList = [];\n      for (let i = 0; i<index; i++) {\n        newUserList.push(getUser[i]);\n      }\n      newUserList.push(getCurrent);\n      for (let i = index+1; i<getUser.length; i++) {\n        newUserList.push(getUser[i]);\n      }\n      localStorage.setItem(\"userData\", JSON.stringify(newUserList))\n    }\n  }\n  checkChanges();\n  \n\n  function NavBar () {\n\n    const [value, setValue] = React.useState(0);\n\n    return ( \n        <React.Fragment>\n          <Box>\n            <BottomNavigation\n              showLabels\n              value={value}\n              onChange={(event, newValue) => {\n                setValue(newValue);\n              }}\n              >\n                <BottomNavigationAction label=\"Home\" href=\"/home\"></BottomNavigationAction>\n                <BottomNavigationAction label=\"Deposit\" href=\"/deposit\"></BottomNavigationAction>\n                <BottomNavigationAction label=\"Withdraw\" href=\"/withdraw\" ></BottomNavigationAction>\n                <BottomNavigationAction label=\"Create Account\" href=\"/createaccount\" ></BottomNavigationAction>\n                <BottomNavigationAction label=\"Data\" href=\"/datadisplay\" ></BottomNavigationAction>\n              </BottomNavigation>\n          </Box>\n        </React.Fragment>\n    )\n  }\n\n  function Header () {\n    return (\n      <NavBar></NavBar>\n    )\n  }\n\n\n  return ( \n    <div id=\"app\">\n      <NavBar></NavBar>\n    <main> \n      <BrowserRouter>\n          <Switch>\n              <Route path='/home' component={Home} />\n              <Route path='/withdraw' component={Withdraw}/>\n              <Route path='/deposit' component={Deposit}/>\n              <Route path=\"/createaccount\" component={CreateAccount} />\n              <Route path=\"/datadisplay\" component={DataDisplay} />\n          </Switch>\n      </BrowserRouter>\n    </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n      <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}